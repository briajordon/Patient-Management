/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospitalmanagement;

import java.awt.Color;
import java.util.Arrays;

/**
 *
 * @author FUNKATRON
 */
public class PatientInfo extends javax.swing.JFrame {

    /**
     * Creates new form PatientInfo
     */
    public PatientInfo() {
        initComponents();
        getContentPane().setBackground(Color.WHITE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PatientID = new javax.swing.JLabel();
        PatientName = new javax.swing.JLabel();
        PatientAddress = new javax.swing.JLabel();
        PhoneNumber = new javax.swing.JLabel();
        DOB = new javax.swing.JLabel();
        PatientComplaint = new javax.swing.JLabel();
        Treatment = new javax.swing.JLabel();
        DoctorID = new javax.swing.JLabel();
        field_PatientID = new javax.swing.JTextField();
        field_PhoneNumber = new javax.swing.JTextField();
        field_DOB = new javax.swing.JTextField();
        field_Address = new javax.swing.JTextField();
        field_DoctorID = new javax.swing.JTextField();
        field_Complaint = new javax.swing.JTextField();
        field_Treatment = new javax.swing.JTextField();
        lastNameFieldBox = new javax.swing.JTextField();
        logo = new javax.swing.JLabel();
        SubmitButton = new javax.swing.JButton();
        firstNameFieldBox = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        PatientID.setText("Patient ID#:");

        PatientName.setText("Patient Name:");

        PatientAddress.setText("Address:");

        PhoneNumber.setText("Phone Number:");

        DOB.setText("DOB:");

        PatientComplaint.setText("Chief Complaint:");

        Treatment.setText("Treatment:");

        DoctorID.setText("Doctor ID#:");

        field_PatientID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                field_PatientIDActionPerformed(evt);
            }
        });

        logo.setIcon(new javax.swing.ImageIcon("C:\\Users\\FUNKATRON\\Desktop\\424logo.PNG")); // NOI18N

        SubmitButton.setText("Submit");
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(Treatment))
                            .addComponent(PatientComplaint)
                            .addComponent(PhoneNumber, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(PatientAddress, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(DOB, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(PatientName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(DoctorID, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(field_Treatment)
                            .addComponent(field_Complaint)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(field_PhoneNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                                    .addComponent(field_DOB)
                                    .addComponent(field_Address))
                                .addGap(4, 153, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(firstNameFieldBox, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lastNameFieldBox))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(field_DoctorID, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(PatientID)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(field_PatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 34, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(logo)
                                .addGap(38, 38, 38))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(SubmitButton)
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(logo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(field_PatientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(PatientID))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(field_DoctorID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(DoctorID)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameFieldBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PatientName)
                    .addComponent(firstNameFieldBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DOB)
                    .addComponent(field_DOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PatientAddress)
                    .addComponent(field_Address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PhoneNumber)
                    .addComponent(field_PhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PatientComplaint)
                    .addComponent(field_Complaint, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Treatment)
                    .addComponent(field_Treatment, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SubmitButton)
                .addGap(7, 7, 7))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void field_PatientIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_field_PatientIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_field_PatientIDActionPerformed

    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed
    boolean [] PatientSuccess = new boolean[9];
    final boolean [] SuccessFlag2 = {true,true,true,true,true,true,true,true,true};   
          
           DBConnect statement = new DBConnect();
          statement.setPatient(field_PatientID.getText(), firstNameFieldBox.getText(), lastNameFieldBox.getText(), field_DOB.getText(), field_Address.getText(), field_PhoneNumber.getText(), field_Complaint.getText(), field_Treatment.getText(), field_DoctorID.getText());
          /*PatientDataConfirmed pdc = new PatientDataConfirmed();
          pdc.setVisible(true);*/
          this.dispose();
        // Both above Boolean Arrays must be true to push into database
        // If the person has already registered once already, refuses a second registration
        
        /*if(firstNameFieldBox.getText().equals("")){ // START OF NAMING CONDITIONAL BLOCK [0] [1]
           PatientSuccess[0] = false;
           // If firstNameField is empty
        }
       else {
            PatientSuccess[0] = true;
            // Remove signal to finish field, set to true
        }
       
       if(lastNameFieldBox.getText().equals("")){
           PatientSuccess[1] = false;
           // If lastNameError is empty
       }
       else {
           PatientSuccess[1] = true;
       }                                            // END OF NAMING CONDITIONAL BLOCK
       DBConnect check = new DBConnect();
       if(PatientID.getText().equals("")){ // EMAIL CONDITIONAL BLOCK [2]
           PatientSuccess[2] = false;
       } 
       else if(check.checkPatID(PatientID.getText())){
           PatientSuccess[2] = false;
       }
       else {
           PatientSuccess[2] = true;
       }                                // END OF EMAIL CONDITION BLOCK
       
   
        if(field_Address.getText().equals("")){ // START OF NAMING CONDITIONAL BLOCK [0] [1]
           PatientSuccess[3] = false;
           // If firstNameField is empty
        }
       else {
            PatientSuccess[3] = true;
            // Remove signal to finish field, set to true
        }
        
        if(field_Complaint.getText().equals("")){ // START OF NAMING CONDITIONAL BLOCK [0] [1]
           PatientSuccess[4] = false;
           // If firstNameField is empty
        }
       else {
            PatientSuccess[4] = true;
            // Remove signal to finish field, set to true
        }
        if(field_DOB.getText().equals("")){ // START OF NAMING CONDITIONAL BLOCK [0] [1]
           PatientSuccess[5] = false;
           // If firstNameField is empty
        }
       else {
            PatientSuccess[5] = true;
            // Remove signal to finish field, set to true
        }
        
        if(field_DoctorID.getText().equals("")){
            PatientSuccess[6] = false;
        }
        else{
            PatientSuccess[6] = true;
        }
             
        if(field_Treatment.getText().equals("")){
            PatientSuccess[7] = false;
        }
        else{
            PatientSuccess[7] = true;
        }
        if(field_PhoneNumber.getText().equals("")){
            PatientSuccess[8] = false;
     
        }
        else{
            PatientSuccess[8] = true;
        }
       
          System.out.println("did i go here");
        if(Arrays.equals(PatientSuccess,SuccessFlag2)){
            
            DBConnect statement = new DBConnect();
           statement.setPatient(field_PatientID.getText(), firstNameFieldBox.getText(), lastNameFieldBox.getText(), field_DOB.getText(), field_Address.getText(), field_PhoneNumber.getText(), field_Complaint.getText(), field_Treatment.getText(), field_DoctorID.getText());
          System.out.println("did i go here");
          LogIn lg = new LogIn(); // TODO add your handling code here:
            lg.setVisible(true);
            this.dispose();
        }*/
    }//GEN-LAST:event_SubmitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DOB;
    private javax.swing.JLabel DoctorID;
    private javax.swing.JLabel PatientAddress;
    private javax.swing.JLabel PatientComplaint;
    private javax.swing.JLabel PatientID;
    private javax.swing.JLabel PatientName;
    private javax.swing.JLabel PhoneNumber;
    private javax.swing.JButton SubmitButton;
    private javax.swing.JLabel Treatment;
    private javax.swing.JTextField field_Address;
    private javax.swing.JTextField field_Complaint;
    private javax.swing.JTextField field_DOB;
    private javax.swing.JTextField field_DoctorID;
    private javax.swing.JTextField field_PatientID;
    private javax.swing.JTextField field_PhoneNumber;
    private javax.swing.JTextField field_Treatment;
    private javax.swing.JTextField firstNameFieldBox;
    private javax.swing.JTextField lastNameFieldBox;
    private javax.swing.JLabel logo;
    // End of variables declaration//GEN-END:variables
}
