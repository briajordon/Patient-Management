/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospitalmanagement;

import java.awt.Color;

/**
 *
 * @author FUNKATRON
 */
public class UpdatePatientInfo extends javax.swing.JFrame {

    /**
     * Creates new form UpdatePatientInfo
     */
    public UpdatePatientInfo() {
        initComponents();
        getContentPane().setBackground(Color.WHITE);
        DBConnect db = new DBConnect();
        DOB.setText("DOB: " + db.patientDOB);
        PatientName.setText("Patient Name: " + db.patientFirstNameStr + " " + db.patientLastNameStr);
        db.getPatientInfo(db.tempPatientID);
        DoctorID.setText("Doctor ID: " + db.tempID);
        PatientID.setText("Patient ID: " + db.tempPatientID);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logo = new javax.swing.JLabel();
        DoctorID = new javax.swing.JLabel();
        PatientName = new javax.swing.JLabel();
        PatientID = new javax.swing.JLabel();
        DOB = new javax.swing.JLabel();
        PatientAddress = new javax.swing.JLabel();
        PhoneNumber = new javax.swing.JLabel();
        PatientComplaint = new javax.swing.JLabel();
        Treatment = new javax.swing.JLabel();
        field_Complaint = new javax.swing.JTextField();
        field_Treatment = new javax.swing.JTextField();
        SubmitButton = new javax.swing.JButton();
        field_Address = new javax.swing.JTextField();
        field_PhoneNumber = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        logo.setIcon(new javax.swing.ImageIcon("C:\\Users\\FUNKATRON\\Desktop\\424logo.PNG")); // NOI18N

        DoctorID.setText("Doctor ID#:");

        PatientName.setText("Patient Name:");

        PatientID.setText("Patient ID#:");

        DOB.setText("DOB:");

        PatientAddress.setText("Address:");

        PhoneNumber.setText("Phone Number:");

        PatientComplaint.setText("Chief Complaint:");

        Treatment.setText("Treatment:");

        SubmitButton.setText("Submit");
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(DoctorID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 156, Short.MAX_VALUE)
                .addComponent(PatientID)
                .addGap(105, 105, 105))
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(Treatment)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 31, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(logo)
                                .addGap(39, 39, 39))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(SubmitButton)
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(DOB)
                            .addComponent(PatientName)
                            .addComponent(PatientAddress)
                            .addComponent(PhoneNumber)
                            .addComponent(PatientComplaint))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(field_PhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(field_Address, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(field_Complaint)
                            .addComponent(field_Treatment)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(logo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DoctorID)
                    .addComponent(PatientID))
                .addGap(23, 23, 23)
                .addComponent(PatientName)
                .addGap(18, 18, 18)
                .addComponent(DOB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PatientAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field_Address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(field_Complaint, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PhoneNumber)
                            .addComponent(field_PhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(PatientComplaint)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Treatment)
                    .addComponent(field_Treatment, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(SubmitButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed
        //boolean [] PatientSuccess = new boolean[9];
        //final boolean [] SuccessFlag2 = {true,true,true,true,true,true,true,true,true};

        DBConnect test = new DBConnect();
     /*       tempPhoneNumber;
    tempComplaint;
    tempTreatment;
    patientAddress;
    patientDOB;*/
     
        test.tempPhoneNumber = field_PhoneNumber.getText();
        test.tempTreatment = field_Treatment.getText();
        test.patientAddress = field_Address.getText();
        test.tempComplaint = field_Complaint.getText();
        test.updatePatientInfo();
        //statement.setPatient(field_PatientID.getText(), firstNameFieldBox.getText(), lastNameFieldBox.getText(), field_DOB.getText(), field_Address.getText(), field_PhoneNumber.getText(), field_Complaint.getText(), field_Treatment.getText(), field_DoctorID.getText());
        this.dispose();
        // Both above Boolean Arrays must be true to push into database
        // If the person has already registered once already, refuses a second registration

        /*if(firstNameFieldBox.getText().equals("")){ // START OF NAMING CONDITIONAL BLOCK [0] [1]
            PatientSuccess[0] = false;
            // If firstNameField is empty
        }
        else {
            PatientSuccess[0] = true;
            // Remove signal to finish field, set to true
        }

        if(lastNameFieldBox.getText().equals("")){
            PatientSuccess[1] = false;
            // If lastNameError is empty
        }
        else {
            PatientSuccess[1] = true;
        }                                            // END OF NAMING CONDITIONAL BLOCK
        DBConnect check = new DBConnect();
        if(PatientID.getText().equals("")){ // EMAIL CONDITIONAL BLOCK [2]
            PatientSuccess[2] = false;
        }
        else if(check.checkPatID(PatientID.getText())){
            PatientSuccess[2] = false;
        }
        else {
            PatientSuccess[2] = true;
        }                                // END OF EMAIL CONDITION BLOCK

        if(field_Address.getText().equals("")){ // START OF NAMING CONDITIONAL BLOCK [0] [1]
            PatientSuccess[3] = false;
            // If firstNameField is empty
        }
        else {
            PatientSuccess[3] = true;
            // Remove signal to finish field, set to true
        }

        if(field_Complaint.getText().equals("")){ // START OF NAMING CONDITIONAL BLOCK [0] [1]
            PatientSuccess[4] = false;
            // If firstNameField is empty
        }
        else {
            PatientSuccess[4] = true;
            // Remove signal to finish field, set to true
        }
        if(field_DOB.getText().equals("")){ // START OF NAMING CONDITIONAL BLOCK [0] [1]
            PatientSuccess[5] = false;
            // If firstNameField is empty
        }
        else {
            PatientSuccess[5] = true;
            // Remove signal to finish field, set to true
        }

        if(field_DoctorID.getText().equals("")){
            PatientSuccess[6] = false;
        }
        else{
            PatientSuccess[6] = true;
        }

        if(field_Treatment.getText().equals("")){
            PatientSuccess[7] = false;
        }
        else{
            PatientSuccess[7] = true;
        }
        if(field_PhoneNumber.getText().equals("")){
            PatientSuccess[8] = false;

        }
        else{
            PatientSuccess[8] = true;
        }

        System.out.println("did i go here");
        if(Arrays.equals(PatientSuccess,SuccessFlag2)){

            DBConnect statement = new DBConnect();
            statement.setPatient(field_PatientID.getText(), firstNameFieldBox.getText(), lastNameFieldBox.getText(), field_DOB.getText(), field_Address.getText(), field_PhoneNumber.getText(), field_Complaint.getText(), field_Treatment.getText(), field_DoctorID.getText());
            System.out.println("did i go here");
            LogIn lg = new LogIn(); // TODO add your handling code here:
            lg.setVisible(true);
            this.dispose();
        }*/
    }//GEN-LAST:event_SubmitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdatePatientInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdatePatientInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdatePatientInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdatePatientInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdatePatientInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DOB;
    private javax.swing.JLabel DoctorID;
    private javax.swing.JLabel PatientAddress;
    private javax.swing.JLabel PatientComplaint;
    private javax.swing.JLabel PatientID;
    private javax.swing.JLabel PatientName;
    private javax.swing.JLabel PhoneNumber;
    private javax.swing.JButton SubmitButton;
    private javax.swing.JLabel Treatment;
    private javax.swing.JTextField field_Address;
    private javax.swing.JTextField field_Complaint;
    private javax.swing.JTextField field_PhoneNumber;
    private javax.swing.JTextField field_Treatment;
    private javax.swing.JLabel logo;
    // End of variables declaration//GEN-END:variables
}
